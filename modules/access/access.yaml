AWSTemplateFormatVersion: 2010-09-09
Description: >-
  Access Template is intended to deploy IAM roles for all Nginx Cloud Solutions
  (i.e. High-Availability or Autoscale)
  Secret Manager service.
Conditions:
#   usePipeline: !Not
#     - !Or
#       - !Equals
#         - ''
#         - !Ref 'codeBuildArn'
#       - !Equals
#         - ''
#         - !Ref 'codeDeployAppication'
#       - !Equals
#         - ''
#         - !Ref 'codeDeployDeploymentGroup'                
#       - !Equals
#         - ''
#         - !Ref 'codeBuildArtifactsBucket'
  useLogs: !Not
    - !Equals
      - ''
      - !Ref 'logGroup'      
Outputs:
  stackName:
    Description: Access nested stack name
    Value: !Ref "AWS::StackName"
  napInstanceProfile:
    Description: NAP instance profile with applied IAM policy.
    Value: !Ref AppProtectInstanceProfile
  napIAMRole:
    Description: NAP IAM Role.
    Value: !Ref AppProtectIAMRole
  # pipelineRoleArn:
  #   Condition: usePipeline
  #   Description: Pipeline role Arn
  #   Value: !GetAtt pipelineRole.Arn
  # pipelineRole:
  #   Condition: usePipeline
  #   Description: Pipeline role with applied IAM policy.
  #   Value: !Ref pipelineRole  
  # codeDeployRoleArn:
  #   Condition: usePipeline
  #   Description: Code Deploy role Arn
  #   Value: !GetAtt codeDeployRole.Arn
  # codeDeployRole:
  #   Condition: usePipeline
  #   Description: Code Deploy role with applied IAM policy.
  #   Value: !Ref codeDeployRole  
  # codeBuildRoleArn:
  #   Condition: usePipeline
  #   Description: Code Build role Arn
  #   Value: !GetAtt codeBuildRole.Arn
  # codeBuildRole:
  #   Condition: usePipeline
  #   Description: Code Build role with applied IAM policy.
  #   Value: !Ref codeBuildRole  
  # cleanupBucketRoleArn:
  #   Condition: usePipeline
  #   Description: Cleanup S3 Artifacts Bucket role Arn
  #   Value: !GetAtt cleanupBucketRole.Arn
  # cleanupBucketRole:
  #   Condition: usePipeline
  #   Description: Cleanup S3 Artifacts Bucket role with applied IAM policy.
  #   Value: !Ref cleanupBucketRole  

Parameters:
  cost:
    Default: f5cost
    Description: Cost Center Tag.
    Type: String
  environment:
    Default: f5env
    Description: Environment Tag.
    Type: String
  group:
    Default: f5group
    Description: Group Tag.
    Type: String
  owner:
    Default: f5owner
    Description: Owner Tag.
    Type: String

  uniqueString:
    AllowedPattern: ^[a-zA-Z][a-zA-Z0-9]{1,11}$
    ConstraintDescription: Must Contain between 1 and 12 alphanumeric characters with first character as a letter.
    Default: myUniqStr
    Description: Unique String used when creating object names or Tags.
    Type: String

  # pipelineArtifactsBucket:
  #   Default: ''
  #   Description: Provides Artifacts Bucket name
  #   Type: String    

  logGroup:
    Default: ''
    Description: Provides Log Group name
    Type: String

  
  # codeBuildArn:
  #   Default: ''
  #   Description: CodeBuild.Arn
  #   Type: String
  # codeCommitRepositoryName:
  #   Default: ''
  #   Description: codeCommitRepositoryName
  #   Type: String    
  # codeDeployAppication:
  #   Default: ''
  #   Description: Ref AppProtectCodeDeployApp
  #   Type: String
  # codeDeployDeploymentGroup:
  #   Default: ''
  #   Description: Ref AppProtectCodeDeployApp
  #   Type: String
  # codeBuildArtifactsBucket:
  #   Default: ''
  #   Description: Provides Artifacts Bucket name
  #   Type: String

Resources:
  AppProtectIAMRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies:
        - PolicyName: !Sub '${uniqueString}-ec2-policy'
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Action:
                  - ec2:DescribeInstances
                  - autoscaling:DescribeAutoScalingGroups
                  - ec2:DescribeTags
                  - ec2:DescribeVolumes
                Effect: Allow
                Resource: "*"
              # - !If
              #   - usePipeline
              #   - Action:
              #       - s3:GetObject
              #       - s3:GetObjectVersion
              #       - s3:GetBucketVersioning
              #     Effect: Allow
              #     Resource:
              #       - !Join
              #         - ""
              #         - - "arn:aws:s3:::"
              #           - !Ref "codeBuildArtifactsBucket"
              #       - !Join
              #         - ""
              #         - - "arn:aws:s3:::"
              #           - !Ref "codeBuildArtifactsBucket"
              #           - /*
              #   - !Ref AWS::NoValue
        # - PolicyName: !Sub '${uniqueString}-cloud-watch-policy'
        #   PolicyDocument:
        #     Version: "2012-10-17"
        #     Statement:
        #       - !If
        #         - useLogs
        #         - Action:
        #             - "logs:PutLogEvents"
        #             - "logs:DescribeLogStreams"
        #             - "logs:DescribeLogGroups"
        #             - "logs:CreateLogStream"
        #             - "logs:CreateLogGroup"
        #           Effect: Allow
        #           Resource:

        #               - !Join
        #                 - ":"
        #                 - - arn
        #                   - aws
        #                   - logs
        #                   - !Ref "AWS::Region"
        #                   - !Ref "AWS::AccountId"
        #                   - log-group
        #                   - !Ref "logGroup"
        #                   - "*"
        #         - !Ref AWS::NoValue
        #       - Action:
        #           - "cloudwatch:PutMetricData"
        #         Effect: Allow
        #         # TODO: check correct resource
        #         Resource: "*"
      Tags:
        - Key: Name
          Value: !Join
            - ''
            - - !Ref uniqueString
              - '-ec2-access-role'
        - Key: costcenter
          Value: !Ref cost
        - Key: environment
          Value: !Ref environment
        - Key: group
          Value: !Ref group
        - Key: owner
          Value: !Ref owner
  AppProtectInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: /
      Roles:
        - !Ref "AppProtectIAMRole"

  # codeBuildRole:
  #   Condition: usePipeline
  #   Type: AWS::IAM::Role
  #   Properties:
  #     AssumeRolePolicyDocument:
  #       Statement:
  #         - Action:
  #             - "sts:AssumeRole"
  #           Effect: Allow
  #           Principal:
  #             Service:
  #               - codebuild.amazonaws.com
  #       Version: "2012-10-17"
  #     Path: /
  #     Policies:
  #       - PolicyName: !Sub '${uniqueString}-code-build-policy'
  #         PolicyDocument:
  #           Version: "2012-10-17"
  #           Statement:
  #             - Action:
  #                 - s3:List*
  #                 - s3:GetObject
  #                 - s3:GetObjectVersion
  #                 - s3:GetBucketVersioning
  #                 - s3:PutObject
  #               Effect: Allow
  #               Resource:
  #                 - !Join
  #                   - ""
  #                   - - "arn:aws:s3:::"
  #                     - !Ref 'codeBuildArtifactsBucket'
  #                 - !Join
  #                   - ""
  #                   - - "arn:aws:s3:::"
  #                     - !Ref 'codeBuildArtifactsBucket'
  #                     - /*
  #     Tags:
  #       - Key: Name
  #         Value: !Join
  #           - ''
  #           - - !Ref uniqueString
  #             - '-code-build-role'
  #       - Key: costcenter
  #         Value: !Ref cost
  #       - Key: environment
  #         Value: !Ref environment
  #       - Key: group
  #         Value: !Ref group
  #       - Key: owner
  #         Value: !Ref owner   
  # codeDeployRole:
  #   Condition: usePipeline
  #   Type: AWS::IAM::Role
  #   Properties:
  #     AssumeRolePolicyDocument:
  #       Statement:
  #         - Action:
  #             - "sts:AssumeRole"
  #           Effect: Allow
  #           Principal:
  #             Service:
  #               - codedeploy.amazonaws.com
  #     Path: /
  #     Policies:
  #       - PolicyName: !Sub '${uniqueString}-code-deploy-policy'
  #         PolicyDocument:
  #           Version: "2012-10-17"
  #           Statement:
  #             - Action:
  #                 - autoscaling:CompleteLifecycleAction
  #                 - autoscaling:DeleteLifecycleHook
  #                 - autoscaling:PutLifecycleHook
  #                 - autoscaling:RecordLifecycleActionHeartbeat
  #               Effect: Allow
  #               Resource: !Join
  #                 - ":"
  #                 - - arn
  #                   - aws
  #                   - autoscaling
  #                   - !Ref "AWS::Region"
  #                   - !Ref "AWS::AccountId"
  #                   - autoScalingGroup
  #                   - "*"
  #                   # TODO: now working on stack create
  #                   # - !Join
  #                   #   - '/'
  #                   #   - - autoScalingGroupName
  #                   #     - !Ref 'AppProtectASG'
  #             - Action:
  #                 - ec2:DescribeInstances
  #                 - ec2:DescribeInstanceStatus
  #                 - autoscaling:DescribeAutoScalingGroups
  #                 - autoscaling:DescribeLifecycleHooks
  #                 # TODO: check resource permissions
  #                 - elasticloadbalancing:RegisterTargets
  #                 - elasticloadbalancing:DeregisterTargets
  #                 - elasticloadbalancing:Describe*
  #               Effect: Allow
  #               Resource: "*"
  #     Tags:
  #       - Key: Name
  #         Value: !Join
  #           - ''
  #           - - !Ref uniqueString
  #             - '-code-deploy-role'
  #       - Key: costcenter
  #         Value: !Ref cost
  #       - Key: environment
  #         Value: !Ref environment
  #       - Key: group
  #         Value: !Ref group
  #       - Key: owner
  #         Value: !Ref owner                
  # pipelineRole:
  #   Condition: usePipeline
  #   Type: AWS::IAM::Role
  #   Properties:
  #     AssumeRolePolicyDocument:
  #       Statement:
  #         - Action:
  #             - "sts:AssumeRole"
  #           Effect: Allow
  #           Principal:
  #             Service:
  #               - codepipeline.amazonaws.com
  #     Path: /
  #     Policies:
  #       - PolicyName: !Sub '${uniqueString}-pipeline-policy'
  #         PolicyDocument:
  #           Version: "2012-10-17"
  #           Statement:
  #             - Action:
  #                 - codecommit:CancelUploadArchive
  #                 - codecommit:GetBranch
  #                 - codecommit:GetCommit
  #                 - codecommit:GetUploadArchiveStatus
  #                 - codecommit:UploadArchive
  #               Effect: Allow
  #               Resource:
  #                 - !Join
  #                   - ":"
  #                   - - arn
  #                     - aws
  #                     - codecommit
  #                     - !Ref "AWS::Region"
  #                     - !Ref "AWS::AccountId"
  #                     - !Ref 'codeCommitRepositoryName'
  #             - Action:
  #                 - codebuild:StartBuild
  #                 - codebuild:BatchGetBuilds
  #                 - codebuild:StopBuild
  #               Effect: Allow
  #               Resource:
  #                 - !Ref 'codeBuildArn'
  #             - Action:
  #                 - codedeploy:CreateDeployment
  #                 - codedeploy:GetApplicationRevision
  #                 - codedeploy:GetDeployment
  #                 - codedeploy:GetDeploymentConfig
  #                 - codedeploy:RegisterApplicationRevision
  #               Effect: Allow
  #               Resource:
  #                 - !Join
  #                   - ":"
  #                   - - arn
  #                     - aws
  #                     - codedeploy
  #                     - !Ref "AWS::Region"
  #                     - !Ref "AWS::AccountId"
  #                     - deploymentgroup
  #                     - !Join
  #                       - "/"
  #                       - - !Ref 'codeDeployAppication'
  #                         - !Ref 'codeDeployDeploymentGroup'
  #                 - !Join
  #                   - ":"
  #                   - - arn
  #                     - aws
  #                     - codedeploy
  #                     - !Ref "AWS::Region"
  #                     - !Ref "AWS::AccountId"
  #                     - application
  #                     - !Ref 'codeDeployAppication'
  #                 - !Join
  #                   - ":"
  #                   - - arn
  #                     - aws
  #                     - codedeploy
  #                     - !Ref "AWS::Region"
  #                     - !Ref "AWS::AccountId"
  #                     - deploymentconfig
  #                     - "*"
  #             - Action:
  #                 - s3:GetObject
  #                 - s3:GetObjectVersion
  #                 - s3:GetBucketVersioning
  #                 - s3:PutObject
  #               Effect: Allow
  #               Resource:
  #                 - !Sub 'arn:aws:s3:::${codeBuildArtifactsBucket}'
  #                 - !Sub 'arn:aws:s3:::${codeBuildArtifactsBucket}/*'
  #     Tags:
  #       - Key: Name
  #         Value: !Join
  #           - ''
  #           - - !Ref uniqueString
  #             - '-pipeline-role'
  #       - Key: costcenter
  #         Value: !Ref cost
  #       - Key: environment
  #         Value: !Ref environment
  #       - Key: group
  #         Value: !Ref group
  #       - Key: owner
  #         Value: !Ref owner

  # cleanupBucketRole:
  #   Condition: usePipeline
  #   Type: AWS::IAM::Role
  #   Properties:
  #     AssumeRolePolicyDocument:
  #       Statement:
  #         - Action:
  #             - "sts:AssumeRole"
  #           Effect: Allow
  #           Principal:
  #             Service:
  #               - lambda.amazonaws.com
  #     Path: /
  #     Policies:
  #       - PolicyName: !Sub '${uniqueString}-cleanup-policy'
  #         PolicyDocument:
  #           Version: "2012-10-17"
  #           Statement:
  #             - Action:
  #                 - s3:ListBucket
  #                 - s3:ListBucketVersions
  #                 - s3:GetObject
  #                 - s3:GetObjectVersion
  #                 - s3:GetBucketVersioning
  #                 - s3:DeleteObject
  #                 - s3:DeleteObjectVersion
  #               Effect: Allow
  #               Resource:
  #                 - !Sub 'arn:aws:s3:::${codeBuildArtifactsBucket}'
  #                 - !Sub 'arn:aws:s3:::${codeBuildArtifactsBucket}/*'
  #     Tags:
  #       - Key: Name
  #         Value: !Join
  #           - ''
  #           - - !Ref uniqueString
  #             - '-cleanup-role'
  #       - Key: costcenter
  #         Value: !Ref cost
  #       - Key: environment
  #         Value: !Ref environment
  #       - Key: group
  #         Value: !Ref group
  #       - Key: owner
  #         Value: !Ref owner
